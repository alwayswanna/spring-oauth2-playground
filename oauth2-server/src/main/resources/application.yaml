server:
  port: 9001

oauth2-server:
  cors-configuration:
    enabled: true
    allowed-origins: "*"
    allowed-origins-all: true
    allowed-methods:
      - "*"
    allowed-headers:
      - "*"
  keycloak:
    base-url: http://localhost:8080

spring:
  application:
    name: oauth2-server
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/authorization
    password: postgres
    username: postgres
  security:
    oauth2:
      resource-server:
        jwt:
          issuer-uri: http://localhost:8080/realms/master
      authorizationserver:
        client:
          default-client:
            registration:
              client-id: "default-client"
              client-secret: "ZGVmYXVsdC1jbGllbnQ="
              client-authentication-methods:
                - "client_secret_basic"
                - "client_secret_post"
                - "client_secret_jwt"
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
                - "client_credentials"
              redirect-uris:
                - "http://127.0.0.1:8080/login/oauth2/code/messaging-client-oidc"
                - "http://127.0.0.1:8080/authorized"
                - "http://127.0.0.1:7071/swagger-ui/oauth2-redirect.html"
                - "http://localhost:7071/swagger-ui/oauth2-redirect.html"
              post-logout-redirect-uris:
                - "http://127.0.0.1:8080/logged-out"
              scopes:
                - "openid"
                - "profile"
                - "statistics"
            require-authorization-consent: true
      client:
        registration:
          keycloak:
            authorization-grant-type: password
            provider: keycloak
            client-id: jwt_client
            scope:
              - openid
            client-secret: jjZ14bi7FMu65VDQrfmekycTNaR5aQRb
        provider:
          keycloak:
            token-uri: ${oauth2-server.keycloak.base-url}/realms/master/protocol/openid-connect/token

management:
  endpoint:
    health:
      show-details: when_authorized

logging:
  level:
    root: info
