server:
  port: 9001
  error:
    include-binding-errors: always
    include-message: always

springdoc:
  swagger-ui:
    oauth:
      client-id: default-client
      client-secret: ZGVmYXVsdC1jbGllbnQ=
  oAuthFlow:
    oidcEndpoint: http://127.0.0.1:9001/.well-known/openid-configuration
  enable-kotlin: true

oauth2-server:
  password-encoder-strength: 13
  security-constraints:
    - roles:
        - ADMIN
      security-collections:
        - patterns:
            - /api/v1/account/**
            - /api/v1/role/**
            - /api/v1/client/**
  cors-configuration:
    enabled: true
    allowed-origins: "*"
    allowed-origins-all: true
    allowed-methods:
      - "*"
    allowed-headers:
      - "*"
  keycloak:
    base-url: http://localhost:8080

spring:
  application:
    name: oauth2-server
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/authorization
    username: postgres
    password: postgres
  security:
    oauth2:
      authorizationserver:
        client:
          default-client:
            registration:
              client-name: "default-client"
              client-id: "default-client"
              client-secret: "ZGVmYXVsdC1jbGllbnQ="
              client-authentication-methods:
                - "client_secret_basic"
                - "client_secret_post"
                - "client_secret_jwt"
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
                - "client_credentials"
              redirect-uris:
                - "http://127.0.0.1:8000/callback.html"
                - "http://127.0.0.1:7071/swagger-ui/oauth2-redirect.html"
                - "http://127.0.0.1:9001/swagger-ui/oauth2-redirect.html"
                - "https://oauth.pstmn.io/v1/browser-callback" #Postman client.
              post-logout-redirect-uris:
                - "http://127.0.0.1:8000/logged-out"
              scopes:
                - "openid"
                - "profile"
            require-authorization-consent: false
      client:
        registration:
          keycloak-idp:
            authorization-grant-type: authorization_code
            redirect-uri: "http://127.0.0.1:9001/login/oauth2/code/keycloak-idp"
            provider: keycloak
            client-id: jwt_client
            client-secret: acOOxqDdosRjzp13nwXtK3FslE6ZK46y
            scope:
              - openid
              - profile
              - email
            client-name: Sign in with keycloak
        provider:
          keycloak:
            authorization-uri: ${oauth2-server.keycloak.base-url}/realms/master/protocol/openid-connect/auth
            token-uri: ${oauth2-server.keycloak.base-url}/realms/master/protocol/openid-connect/token
            user-info-uri: ${oauth2-server.keycloak.base-url}/realms/master/protocol/openid-connect/userinfo
            jwk-set-uri: ${oauth2-server.keycloak.base-url}/realms/master/protocol/openid-connect/certs
            user-name-attribute: preferred_username

management:
  endpoint:
    health:
      show-details: when_authorized

logging:
  level:
    root: info
